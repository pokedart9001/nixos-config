diff --git a/src/funcs/drawing.nim b/src/funcs/drawing.nim
index d4c89c2..ee4a6a4 100644
--- a/src/funcs/drawing.nim
+++ b/src/funcs/drawing.nim
@@ -3,10 +3,10 @@ import
   std/strutils,
   getDistroId,      # import to get distro id through /etc/os-release
   ../assets/logos,  # uncomment if you use your own logo
-  ../nitches/[getUser, getHostname,
-                  getDistro, getKernel,
+  ../nitches/[getUser, getDistro,
+                  getKernel, getDesktop,
                   getUptime, getShell,
-                  getPkgs, getRam, getLogo]  # import nitches to get info about user system
+                  getLogo]  # import nitches to get info about user system
 
 # the main function for drawing fetch
 proc drawInfo*(asciiArt: bool) =
@@ -18,15 +18,13 @@ proc drawInfo*(asciiArt: bool) =
     # (fgRed, nitchLogo)
 
   const  # icons before cotegores
-    userIcon   = " "  # recomended: " " or "|>"
-    hnameIcon  = " "  # recomended: " " or "|>"
-    distroIcon = "󰻀 "  # recomended: "󰻀 " or "|>"
-    kernelIcon = "󰌢 "  # recomended: "󰌢 " or "|>"
-    uptimeIcon = " "  # recomended: " " or "|>"
-    shellIcon  = " "  # recomended: " " or "|>"
-    pkgsIcon   = "󰏖 "  # recomended: "󰏖 " or "|>"
-    ramIcon    = "󰍛 "  # recomended: "󰍛 " or "|>"
-    colorsIcon = "󰏘 "  # recomended: "󰏘 " or "->"
+    userIcon    = " "  # recomended: " " or "|>"
+    distroIcon  = "󰻀 "  # recomended: "󰻀 " or "|>"
+    kernelIcon  = "󰌢 "  # recomended: "󰌢 " or "|>"
+    desktopIcon = " "  # recomended: " " or "|>"
+    uptimeIcon  = " "  # recomended: " " or "|>"
+    shellIcon   = " "  # recomended: " " or "|>"
+    colorsIcon  = "󰏘 "  # recomended: "󰏘 " or "->"
     # please insert any char after the icon
     # to avoid the bug with cropping the edge of the icon
 
@@ -34,25 +32,21 @@ proc drawInfo*(asciiArt: bool) =
     # icon for demonstrate colors
 
   const  # categories
-    userCat   = " user   │ "  # recomended: " user   │ "
-    hnameCat  = " hname  │ "  # recomended: " hname  │ "
-    distroCat = " distro │ "  # recomended: " distro │ "
-    kernelCat = " kernel │ "  # recomended: " kernel │ "-
-    uptimeCat = " uptime │ "  # recomended: " uptime │ "
-    shellCat  = " shell  │ "  # recomended: " shell  │ "
-    pkgsCat   = " pkgs   │ "  # recomended: " pkgs   │ "
-    ramCat    = " memory │ "  # recomended: " memory │ "
-    colorsCat = " colors │ "  # recomended: " colors │ "
+    userCat    = " user   │ "  # recomended: " user   │ "
+    distroCat  = " distro │ "  # recomended: " distro │ "
+    kernelCat  = " kernel │ "  # recomended: " kernel │ "-
+    desktopCat = " de/wm  │ "  # recomended: " de/wm  │ "
+    uptimeCat  = " uptime │ "  # recomended: " uptime │ "
+    shellCat   = " shell  │ "  # recomended: " shell  │ "
+    colorsCat  = " colors │ "  # recomended: " colors │ "
 
   let  # all info about system
     userInfo     = getUser()          # get user through $USER env variable
-    hostnameInfo = getHostname()      # get Hostname hostname through /etc/hostname
     distroInfo   = getDistro()        # get distro through /etc/os-release
     kernelInfo   = getKernel()        # get kernel through /proc/version
+    desktopInfo  = getDesktop()       # get desktop session through $XDG_CURRENT_DESKTOP env variable
     uptimeInfo   = getUptime()        # get Uptime through /proc/uptime file
     shellInfo    = getShell()         # get shell through $SHELL env variable
-    pkgsInfo     = getPkgs(distroId)  # get amount of packages in distro
-    ramInfo      = getRam()           # get ram through /proc/meminfo
 
   const  # aliases for colors
     color1 = fgRed
@@ -73,15 +67,12 @@ proc drawInfo*(asciiArt: bool) =
 
   # colored out
     stdout.styledWrite("\n", styleBright, "  ╭───────────╮\n")
-    stdout.styledWrite("  │ ", color2, userIcon, color0, userCat, color1, userInfo, color0, "\n",)
-    if not isEmptyOrWhitespace(hostnameInfo):
-      stdout.styledWrite("  │ ", color2, hnameIcon, color0, hnameCat, color2, hostnameInfo, color0, "\n")
-    stdout.styledWrite("  │ ", color3, distroIcon, color0, distroCat, color3, distroInfo, color0, "\n")
-    stdout.styledWrite("  │ ", color4, kernelIcon, color0, kernelCat, color4, kernelInfo, color0, "\n")
+    stdout.styledWrite("  │ ", color1, userIcon, color0, userCat, color1, userInfo, color0, "\n",)
+    stdout.styledWrite("  │ ", color2, distroIcon, color0, distroCat, color2, distroInfo, color0, "\n")
+    stdout.styledWrite("  │ ", color3, kernelIcon, color0, kernelCat, color3, kernelInfo, color0, "\n")
+    stdout.styledWrite("  │ ", color4, desktopIcon, color0, desktopCat, color4, desktopInfo, color0, "\n")
     stdout.styledWrite("  │ ", color5, uptimeIcon, color0, uptimeCat, color5, uptimeInfo, color0, "\n")
     stdout.styledWrite("  │ ", color6, shellIcon, color0, shellCat, color6, shellInfo, color0, "\n")
-    stdout.styledWrite("  │ ", color1, pkgsIcon, color0, pkgsCat, color1, pkgsInfo, color0, "\n")
-    stdout.styledWrite("  │ ", color2, ramIcon, color0, ramCat, fgYellow, ramInfo, color0, "\n")
     stdout.styledWrite("  ├───────────┤\n")
     stdout.styledWrite("  │ ", color7, colorsIcon, color0, colorsCat, color7, dotIcon, " ", color1, dotIcon, " ", color2, dotIcon, " ", color3, dotIcon, " ", color4, dotIcon, " ", color5, dotIcon, " ", color6, dotIcon, " ", color8, dotIcon, color0, "\n")
     stdout.styledWrite("  ╰───────────╯\n\n")
diff --git a/src/nitches/getDesktop.nim b/src/nitches/getDesktop.nim
new file mode 100644
index 0000000..3d3224e
--- /dev/null
+++ b/src/nitches/getDesktop.nim
@@ -0,0 +1,5 @@
+import
+  std/os
+
+func getDesktop*(): string =
+  result = getEnv("DESKTOP_SESSION")
